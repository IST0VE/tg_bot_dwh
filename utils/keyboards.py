# utils/keyboards.py

from telebot import types
import uuid

def generate_callback_data(prefix, *args):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–π callback_data, —Å–æ—Ö—Ä–∞–Ω—è—è –¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã –∏ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—è –¥–ª–∏–Ω—É.
    """
    allowed_chars = set("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_-")
    safe_args = []
    for arg in args:
        safe_arg = ''.join(e for e in arg if e in allowed_chars)
        safe_args.append(safe_arg[:20])  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –∫–∞–∂–¥–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
    callback = f"{prefix}:" + ":".join(safe_args)
    return callback

def generate_markup(current, path, shared_key=None):
    markup = types.InlineKeyboardMarkup()
    
    # –ö–Ω–æ–ø–∫–∞ "–í–≤–µ—Ä—Ö", –µ—Å–ª–∏ –Ω–µ –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ
    if path:
        if shared_key:
            callback_data = generate_callback_data("shared_up", shared_key)
        else:
            callback_data = "up"
        markup.add(types.InlineKeyboardButton("‚¨ÜÔ∏è –í–≤–µ—Ä—Ö", callback_data=callback_data))

    # –ö–Ω–æ–ø–∫–∏ –ø–∞–ø–æ–∫
    for folder in current["folders"]:
        if shared_key:
            callback_data = generate_callback_data("shared_folder", shared_key, folder)
        else:
            callback_data = generate_callback_data("folder", folder)
        markup.add(types.InlineKeyboardButton(f"üìÅ {folder}", callback_data=callback_data))

    # –ö–Ω–æ–ø–∫–∏ —Ñ–∞–π–ª–æ–≤
    for idx, file in enumerate(current["files"], start=1):
        if file["type"] == "text":
            display_name = f"üìù –¢–µ–∫—Å—Ç {idx}"
        elif file["type"] == "document":
            display_name = f"üìÑ –î–æ–∫—É–º–µ–Ω—Ç {idx}"
        elif file["type"] == "photo":
            display_name = f"üñºÔ∏è –§–æ—Ç–æ {idx}"
        elif file["type"] == "video":
            display_name = f"üé¨ –í–∏–¥–µ–æ {idx}"
        elif file["type"] == "audio":
            display_name = f"üéµ –ê—É–¥–∏–æ {idx}"
        else:
            display_name = f"üìÅ –§–∞–π–ª {idx}"

        if shared_key:
            callback_data = generate_callback_data("shared_file", shared_key, file["file_id"])
        else:
            callback_data = generate_callback_data("file", file["file_id"])
        markup.add(types.InlineKeyboardButton(display_name, callback_data=callback_data))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "Retrieve All"
    if shared_key:
        callback_data = generate_callback_data("shared_retrieve_all", shared_key)
    else:
        callback_data = "retrieve_all"
    markup.add(types.InlineKeyboardButton("üì§ –í–µ—Ä–Ω—É—Ç—å –í—Å–µ", callback_data=callback_data))

    return markup
